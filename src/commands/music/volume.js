const { Command, container } = require('@sapphire/framework');
const { EmbedBuilder } = require('discord.js');

const { color } = require('../../config.json');

class VolumeCommand extends Command {
    constructor(context, options) {
        super(context, {
            ...options,
            name: 'volume',
            aliases: ['vol'],
            description: 'play song from source'
        });
    }

    async messageRun(message, args) {
        const { client } = container;

        if (!message.member.voice.channel) {
            const Content = new EmbedBuilder()
                .setColor(color)
                .setTitle('‚ö†Ô∏è ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!')
                .setDescription('‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
                .setTimestamp()

            return await message.reply({ embeds: [Content] });
        } else {
            const queue = client.distube.getQueue(message)

            if (!queue) {
                const Content = new EmbedBuilder()
                    .setColor(color)
                    .setTitle('‚ö†Ô∏è ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!')
                    .setDescription('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏™‡∏±‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏î‡∏π‡∏™‡∏¥')
                    .setTimestamp()

                return message.channel.send({ embeds: [Content] })
            } else {
                const Value = await args.rest('string');
                const volume = parseInt(Value)

                if (isNaN(volume)) {
                    const Content = new EmbedBuilder()
                        .setColor(color)
                        .setTitle('‚ö†Ô∏è ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!')
                        .setDescription('‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 0-100 ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏î‡πâ')
                        .setTimestamp()

                    return message.channel.send({ embeds: [Content] })
                } else {
                    queue.setVolume(volume)

                    const Content = new EmbedBuilder()
                        .setColor(color)
                        .setTitle('üîä ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
                        .setDescription('‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏õ‡πá‡∏ô : **' + volume + "** %")
                        .setTimestamp()

                    return message.channel.send({ embeds: [Content] })
                }
            }
        }
    }
}
module.exports = {
    VolumeCommand
};