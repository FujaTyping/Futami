const { Command, container } = require('@sapphire/framework');
const { EmbedBuilder } = require('discord.js');

const config = require('../../config.json');
const color = config.chat.color
const emote = config.default

class QueueCommand extends Command {
    constructor(context, options) {
        super(context, {
            ...options,
            name: 'queue',
            aliases: ['q'],
            description: 'see queue in the server'
        });
    }

    async messageRun(message) {
        const { client } = container;

        if (!message.member.voice.channel) {
            const Content = new EmbedBuilder()
                .setColor(color)
                .setTitle(`${emote.warning} ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!`)
                .setDescription('‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
                .setTimestamp()

            return await message.reply({ embeds: [Content] });
        } else {
            const queue = client.distube.getQueue(message)

            if (!queue) {
                const Content = new EmbedBuilder()
                    .setColor(color)
                    .setTitle(`${emote.warning} ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!`)
                    .setDescription('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏™‡∏±‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏î‡∏π‡∏™‡∏¥')
                    .setTimestamp()

                return message.channel.send({ embeds: [Content] })
            } else {
                const q = queue.songs
                    .map((song, i) => `${i === 0 ? 'üé§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á ' : `${i} .`} **${song.name}** - \`${song.formattedDuration}\` ‡∏ô‡∏≤‡∏ó‡∏µ`)
                    .join('\n')

                const Content = new EmbedBuilder()
                    .setColor(color)
                    .setTitle('üéº ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á')
                    .setDescription(q)
                    .setTimestamp()

                return message.channel.send({ embeds: [Content] })
            }
        }
    }
}
module.exports = {
    QueueCommand
};