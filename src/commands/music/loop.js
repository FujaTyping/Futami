const { Command, container } = require('@sapphire/framework');
const { EmbedBuilder } = require('discord.js');

const config = require('../../config.json');
const color = config.chat.color
const emote = config.default

class LoopCommand extends Command {
    constructor(context, options) {
        super(context, {
            ...options,
            name: 'loop',
            aliases: ['lp'],
            description: 'loop song',
            preconditions: ['InVoiceChannel']
        });
    }

    async messageRun(message, args) {
        const { client } = container;

        const queue = client.distube.getQueue(message)

        if (!queue) {
            const Content = new EmbedBuilder()
                .setColor(color)
                .setAuthor({ name: '‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô !!', iconURL: 'https://futami.siraphop.me/assets/icon/warning.png' })
                .setDescription('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡∏•‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏°‡∏≤‡∏™‡∏±‡∏Å‡πÄ‡∏û‡∏•‡∏á‡∏î‡∏π‡∏™‡∏¥')
                .setTimestamp()

            return message.channel.send({ embeds: [Content] })
        } else {
            let mode = null
            const Status = await args.rest('string');

            switch (Status) {
                case 'off':
                    mode = 0
                    break
                case 'song':
                    mode = 1
                    break
                case 'queue':
                    mode = 2
                    break
            }

            mode = queue.setRepeatMode(mode)
            mode = mode ? (mode === 2 ? '‡∏•‡∏π‡∏õ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß' : '‡∏•‡∏π‡∏õ‡πÅ‡∏Ñ‡πà‡πÄ‡∏û‡∏•‡∏á‡∏ô‡∏µ‡πâ') : '‡∏õ‡∏¥‡∏î (‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏õ)'

            const Content = new EmbedBuilder()
                .setColor(color)
                .setTitle('üîÅ ‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏π‡∏õ')
                .setDescription('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ : **' + mode + '**')
                .setFooter({ text: `‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢ : ${message.author.username}`, iconURL: message.author.avatarURL() })
                .setTimestamp()

            return message.channel.send({ embeds: [Content] })
        }
    }
}
module.exports = {
    LoopCommand
};