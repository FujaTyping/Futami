const { isMessageInstance } = require('@sapphire/discord.js-utilities');
const { Command, err } = require('@sapphire/framework');
const { EmbedBuilder } = require('discord.js');
const axios = require('axios')

const { color } = require('../../config.json');

class EmoteCommand extends Command {
    constructor(context, options) {
        super(context, { ...options });
    }

    registerApplicationCommands(registry) {
        registry.registerChatInputCommand((builder) =>
            builder.setName('emote').setDescription('‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô‡∏Å‡∏±‡∏ô ??')
                .addStringOption((option) =>
                    option
                        .setName('action')
                        .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏°‡∏≤‡πÄ‡∏•‡∏¢ !!')
                        .addChoices(
                            { name: '‡∏Å‡∏≠‡∏î', value: 'hug' },
                            { name: '‡∏à‡∏π‡∏ö', value: 'kiss' },
                            { name: '‡∏ö‡∏≠‡∏á‡∏Å‡πå', value: 'bonk' },
                            { name: '‡∏¢‡∏µ‡∏ó', value: 'yeet' },
                            { name: '‡πÇ‡∏ö‡∏Å‡∏°‡∏∑‡∏≠', value: 'wave' },
                            { name: '‡πÑ‡∏Æ‡πÑ‡∏ü‡∏ß‡πå', value: 'highfive' },
                            { name: '‡∏à‡∏±‡∏ö‡∏°‡∏∑‡∏≠', value: 'handhold' },
                            { name: '‡∏ï‡∏ö', value: 'slap' },
                            { name: '‡∏Ü‡πà‡∏≤', value: 'kill' },
                            { name: '‡πÄ‡∏ï‡∏∞', value: 'kick' },
                            { name: '‡∏Å‡∏±‡∏î', value: 'bite' },
                            { name: '‡πÄ‡∏ï‡πâ‡∏ô', value: 'dance' },
                            { name: '‡∏¢‡∏¥‡πâ‡∏°', value: 'smile' },
                            { name: '‡∏£‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ', value: 'cry' },
                            { name: '‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç', value: 'happy' },
                            { name: '‡∏•‡∏π‡∏ö‡∏´‡∏±‡∏ß', value: 'pat' }
                        )
                        .setRequired(true)
                )
                .addUserOption((option) =>
                    option
                        .setName('user')
                        .setDescription('‡∏≠‡∏¢‡∏≤‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡πÉ‡∏™‡πà‡πÉ‡∏Ñ‡∏£‡∏•‡∏∞ ??')
                        .setRequired(true)
                )
        );
    }

    async chatInputRun(interaction) {
        const Action = interaction.options.getString('action')
        const User = interaction.options.getUser('user')

        const Choices = [
            { name: '‡∏Å‡∏≠‡∏î', value: 'hug' },
            { name: '‡∏à‡∏π‡∏ö', value: 'kiss' },
            { name: '‡∏ö‡∏≠‡∏á‡∏Å‡πå', value: 'bonk' },
            { name: '‡∏¢‡∏µ‡∏ó', value: 'yeet' },
            { name: '‡πÇ‡∏ö‡∏Å‡∏°‡∏∑‡∏≠ ‡πÉ‡∏´‡πâ', value: 'wave' },
            { name: '‡πÑ‡∏Æ‡πÑ‡∏ü‡∏ß‡πå ‡∏Å‡∏±‡∏ö', value: 'highfive' },
            { name: '‡∏à‡∏±‡∏ö‡∏°‡∏∑‡∏≠', value: 'handhold' },
            { name: '‡∏ï‡∏ö', value: 'slap' },
            { name: '‡∏Ü‡πà‡∏≤', value: 'kill' },
            { name: '‡πÄ‡∏ï‡∏∞', value: 'kick' },
            { name: '‡∏Å‡∏±‡∏î', value: 'bite' },
            { name: '‡πÄ‡∏ï‡πâ‡∏ô ‡∏Å‡∏±‡∏ö', value: 'dance' },
            { name: '‡∏¢‡∏¥‡πâ‡∏° ‡πÉ‡∏´‡πâ', value: 'smile' },
            { name: '‡∏£‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ ‡∏Å‡∏±‡∏ö', value: 'cry' },
            { name: '‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç ‡∏Å‡∏±‡∏ö', value: 'happy' },
            { name: '‡∏•‡∏π‡∏ö‡∏´‡∏±‡∏ß', value: 'pat' }
        ];

        const Emote = Choices.find(choice => choice.value === Action)?.name;

        const Content = new EmbedBuilder()
            .setColor(color)
            .setTitle('üòÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á')
            .setDescription('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ..')
            .setTimestamp()

        const msg = await interaction.reply({ embeds: [Content], fetchReply: true });

        axios.get(`https://api.waifu.pics/sfw/${Action}`)
            .then(response => {
                const Response = response.data;

                const Content = new EmbedBuilder()
                    .setColor(color)
                    .setTitle(`üòÄ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡πà‡∏≤‡∏ó‡∏≤‡∏á`)
                    .setDescription(`<@${interaction.user.id}> ${Emote} ${User}`)
                    .setImage(`${Response.url}`)
                    .setTimestamp()

                return interaction.editReply({ embeds: [Content] });
            })
            .catch(error => {
                const Content = new EmbedBuilder()
                    .setColor(color)
                    .setTitle(`üõë ‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô`)
                    .setDescription("```\n" + error + "\n```")
                    .setTimestamp()

                return interaction.editReply({ embeds: [Content] });
            });
    }
}
module.exports = {
    EmoteCommand
};